
main:     file format elf64-x86-64


Disassembly of section .init:

0000000000400778 <_init>:
  400778:	48 83 ec 08          	sub    $0x8,%rsp
  40077c:	48 8b 05 75 08 20 00 	mov    0x200875(%rip),%rax        # 600ff8 <__gmon_start__>
  400783:	48 85 c0             	test   %rax,%rax
  400786:	74 05                	je     40078d <_init+0x15>
  400788:	e8 33 00 00 00       	callq  4007c0 <__gmon_start__@plt>
  40078d:	48 83 c4 08          	add    $0x8,%rsp
  400791:	c3                   	retq   

Disassembly of section .plt:

00000000004007a0 <.plt>:
  4007a0:	ff 35 62 08 20 00    	pushq  0x200862(%rip)        # 601008 <_GLOBAL_OFFSET_TABLE_+0x8>
  4007a6:	ff 25 64 08 20 00    	jmpq   *0x200864(%rip)        # 601010 <_GLOBAL_OFFSET_TABLE_+0x10>
  4007ac:	0f 1f 40 00          	nopl   0x0(%rax)

00000000004007b0 <_ZNSolsEi@plt>:
  4007b0:	ff 25 62 08 20 00    	jmpq   *0x200862(%rip)        # 601018 <_ZNSolsEi@GLIBCXX_3.4>
  4007b6:	68 00 00 00 00       	pushq  $0x0
  4007bb:	e9 e0 ff ff ff       	jmpq   4007a0 <.plt>

00000000004007c0 <__gmon_start__@plt>:
  4007c0:	ff 25 5a 08 20 00    	jmpq   *0x20085a(%rip)        # 601020 <__gmon_start__>
  4007c6:	68 01 00 00 00       	pushq  $0x1
  4007cb:	e9 d0 ff ff ff       	jmpq   4007a0 <.plt>

00000000004007d0 <_ZNSt8ios_base4InitC1Ev@plt>:
  4007d0:	ff 25 52 08 20 00    	jmpq   *0x200852(%rip)        # 601028 <_ZNSt8ios_base4InitC1Ev@GLIBCXX_3.4>
  4007d6:	68 02 00 00 00       	pushq  $0x2
  4007db:	e9 c0 ff ff ff       	jmpq   4007a0 <.plt>

00000000004007e0 <__libc_start_main@plt>:
  4007e0:	ff 25 4a 08 20 00    	jmpq   *0x20084a(%rip)        # 601030 <__libc_start_main@GLIBC_2.2.5>
  4007e6:	68 03 00 00 00       	pushq  $0x3
  4007eb:	e9 b0 ff ff ff       	jmpq   4007a0 <.plt>

00000000004007f0 <__cxa_atexit@plt>:
  4007f0:	ff 25 42 08 20 00    	jmpq   *0x200842(%rip)        # 601038 <__cxa_atexit@GLIBC_2.2.5>
  4007f6:	68 04 00 00 00       	pushq  $0x4
  4007fb:	e9 a0 ff ff ff       	jmpq   4007a0 <.plt>

0000000000400800 <_ZNSt8ios_base4InitD1Ev@plt>:
  400800:	ff 25 3a 08 20 00    	jmpq   *0x20083a(%rip)        # 601040 <_ZNSt8ios_base4InitD1Ev@GLIBCXX_3.4>
  400806:	68 05 00 00 00       	pushq  $0x5
  40080b:	e9 90 ff ff ff       	jmpq   4007a0 <.plt>

0000000000400810 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>:
  400810:	ff 25 32 08 20 00    	jmpq   *0x200832(%rip)        # 601048 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@GLIBCXX_3.4>
  400816:	68 06 00 00 00       	pushq  $0x6
  40081b:	e9 80 ff ff ff       	jmpq   4007a0 <.plt>

0000000000400820 <_Z3sumii@plt>:
  400820:	ff 25 2a 08 20 00    	jmpq   *0x20082a(%rip)        # 601050 <_Z3sumii>
  400826:	68 07 00 00 00       	pushq  $0x7
  40082b:	e9 70 ff ff ff       	jmpq   4007a0 <.plt>

0000000000400830 <_ZNSolsEPFRSoS_E@plt>:
  400830:	ff 25 22 08 20 00    	jmpq   *0x200822(%rip)        # 601058 <_ZNSolsEPFRSoS_E@GLIBCXX_3.4>
  400836:	68 08 00 00 00       	pushq  $0x8
  40083b:	e9 60 ff ff ff       	jmpq   4007a0 <.plt>

0000000000400840 <_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@plt>:
  400840:	ff 25 1a 08 20 00    	jmpq   *0x20081a(%rip)        # 601060 <_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@GLIBCXX_3.4>
  400846:	68 09 00 00 00       	pushq  $0x9
  40084b:	e9 50 ff ff ff       	jmpq   4007a0 <.plt>

Disassembly of section .text:

0000000000400850 <_start>:
  400850:	31 ed                	xor    %ebp,%ebp
  400852:	49 89 d1             	mov    %rdx,%r9
  400855:	5e                   	pop    %rsi
  400856:	48 89 e2             	mov    %rsp,%rdx
  400859:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
  40085d:	50                   	push   %rax
  40085e:	54                   	push   %rsp
  40085f:	49 c7 c0 60 0a 40 00 	mov    $0x400a60,%r8
  400866:	48 c7 c1 f0 09 40 00 	mov    $0x4009f0,%rcx
  40086d:	48 c7 c7 3d 09 40 00 	mov    $0x40093d,%rdi
  400874:	e8 67 ff ff ff       	callq  4007e0 <__libc_start_main@plt>
  400879:	f4                   	hlt    
  40087a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000400880 <deregister_tm_clones>:
  400880:	b8 77 10 60 00       	mov    $0x601077,%eax
  400885:	55                   	push   %rbp
  400886:	48 2d 70 10 60 00    	sub    $0x601070,%rax
  40088c:	48 83 f8 0e          	cmp    $0xe,%rax
  400890:	48 89 e5             	mov    %rsp,%rbp
  400893:	77 02                	ja     400897 <deregister_tm_clones+0x17>
  400895:	5d                   	pop    %rbp
  400896:	c3                   	retq   
  400897:	b8 00 00 00 00       	mov    $0x0,%eax
  40089c:	48 85 c0             	test   %rax,%rax
  40089f:	74 f4                	je     400895 <deregister_tm_clones+0x15>
  4008a1:	5d                   	pop    %rbp
  4008a2:	bf 70 10 60 00       	mov    $0x601070,%edi
  4008a7:	ff e0                	jmpq   *%rax
  4008a9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000004008b0 <register_tm_clones>:
  4008b0:	b8 70 10 60 00       	mov    $0x601070,%eax
  4008b5:	55                   	push   %rbp
  4008b6:	48 2d 70 10 60 00    	sub    $0x601070,%rax
  4008bc:	48 c1 f8 03          	sar    $0x3,%rax
  4008c0:	48 89 e5             	mov    %rsp,%rbp
  4008c3:	48 89 c2             	mov    %rax,%rdx
  4008c6:	48 c1 ea 3f          	shr    $0x3f,%rdx
  4008ca:	48 01 d0             	add    %rdx,%rax
  4008cd:	48 d1 f8             	sar    %rax
  4008d0:	75 02                	jne    4008d4 <register_tm_clones+0x24>
  4008d2:	5d                   	pop    %rbp
  4008d3:	c3                   	retq   
  4008d4:	ba 00 00 00 00       	mov    $0x0,%edx
  4008d9:	48 85 d2             	test   %rdx,%rdx
  4008dc:	74 f4                	je     4008d2 <register_tm_clones+0x22>
  4008de:	5d                   	pop    %rbp
  4008df:	48 89 c6             	mov    %rax,%rsi
  4008e2:	bf 70 10 60 00       	mov    $0x601070,%edi
  4008e7:	ff e2                	jmpq   *%rdx
  4008e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000004008f0 <__do_global_dtors_aux>:
  4008f0:	80 3d 99 08 20 00 00 	cmpb   $0x0,0x200899(%rip)        # 601190 <completed.6355>
  4008f7:	75 11                	jne    40090a <__do_global_dtors_aux+0x1a>
  4008f9:	55                   	push   %rbp
  4008fa:	48 89 e5             	mov    %rsp,%rbp
  4008fd:	e8 7e ff ff ff       	callq  400880 <deregister_tm_clones>
  400902:	5d                   	pop    %rbp
  400903:	c6 05 86 08 20 00 01 	movb   $0x1,0x200886(%rip)        # 601190 <completed.6355>
  40090a:	f3 c3                	repz retq 
  40090c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000400910 <frame_dummy>:
  400910:	48 83 3d c8 04 20 00 	cmpq   $0x0,0x2004c8(%rip)        # 600de0 <__JCR_END__>
  400917:	00 
  400918:	74 1e                	je     400938 <frame_dummy+0x28>
  40091a:	b8 00 00 00 00       	mov    $0x0,%eax
  40091f:	48 85 c0             	test   %rax,%rax
  400922:	74 14                	je     400938 <frame_dummy+0x28>
  400924:	55                   	push   %rbp
  400925:	bf e0 0d 60 00       	mov    $0x600de0,%edi
  40092a:	48 89 e5             	mov    %rsp,%rbp
  40092d:	ff d0                	callq  *%rax
  40092f:	5d                   	pop    %rbp
  400930:	e9 7b ff ff ff       	jmpq   4008b0 <register_tm_clones>
  400935:	0f 1f 00             	nopl   (%rax)
  400938:	e9 73 ff ff ff       	jmpq   4008b0 <register_tm_clones>

000000000040093d <main>:
#include <iostream>
using namespace std;

extern int sum(int a, int b);

int main() {
  40093d:	55                   	push   %rbp
  40093e:	48 89 e5             	mov    %rsp,%rbp
  400941:	53                   	push   %rbx
  400942:	48 83 ec 18          	sub    $0x18,%rsp
  int x = 1, y = 2;
  400946:	c7 45 ec 01 00 00 00 	movl   $0x1,-0x14(%rbp)
  40094d:	c7 45 e8 02 00 00 00 	movl   $0x2,-0x18(%rbp)
  cout << "sum(x, y) is: " << sum(x, y) << endl;
  400954:	8b 55 e8             	mov    -0x18(%rbp),%edx
  400957:	8b 45 ec             	mov    -0x14(%rbp),%eax
  40095a:	89 d6                	mov    %edx,%esi
  40095c:	89 c7                	mov    %eax,%edi
  40095e:	e8 bd fe ff ff       	callq  400820 <_Z3sumii@plt>
  400963:	89 c3                	mov    %eax,%ebx
  400965:	be 80 0a 40 00       	mov    $0x400a80,%esi
  40096a:	bf 80 10 60 00       	mov    $0x601080,%edi
  40096f:	e8 9c fe ff ff       	callq  400810 <_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@plt>
  400974:	89 de                	mov    %ebx,%esi
  400976:	48 89 c7             	mov    %rax,%rdi
  400979:	e8 32 fe ff ff       	callq  4007b0 <_ZNSolsEi@plt>
  40097e:	be 40 08 40 00       	mov    $0x400840,%esi
  400983:	48 89 c7             	mov    %rax,%rdi
  400986:	e8 a5 fe ff ff       	callq  400830 <_ZNSolsEPFRSoS_E@plt>
  return 0;
  40098b:	b8 00 00 00 00       	mov    $0x0,%eax
}
  400990:	48 83 c4 18          	add    $0x18,%rsp
  400994:	5b                   	pop    %rbx
  400995:	5d                   	pop    %rbp
  400996:	c3                   	retq   

0000000000400997 <_Z41__static_initialization_and_destruction_0ii>:
  400997:	55                   	push   %rbp
  400998:	48 89 e5             	mov    %rsp,%rbp
  40099b:	48 83 ec 10          	sub    $0x10,%rsp
  40099f:	89 7d fc             	mov    %edi,-0x4(%rbp)
  4009a2:	89 75 f8             	mov    %esi,-0x8(%rbp)
  4009a5:	83 7d fc 01          	cmpl   $0x1,-0x4(%rbp)
  4009a9:	75 27                	jne    4009d2 <_Z41__static_initialization_and_destruction_0ii+0x3b>
  4009ab:	81 7d f8 ff ff 00 00 	cmpl   $0xffff,-0x8(%rbp)
  4009b2:	75 1e                	jne    4009d2 <_Z41__static_initialization_and_destruction_0ii+0x3b>
  extern wostream wclog;	/// Linked to standard error (buffered)
#endif
  //@}

  // For construction of filebuffers for cout, cin, cerr, clog et. al.
  static ios_base::Init __ioinit;
  4009b4:	bf 91 11 60 00       	mov    $0x601191,%edi
  4009b9:	e8 12 fe ff ff       	callq  4007d0 <_ZNSt8ios_base4InitC1Ev@plt>
  4009be:	ba 78 0a 40 00       	mov    $0x400a78,%edx
  4009c3:	be 91 11 60 00       	mov    $0x601191,%esi
  4009c8:	bf 00 08 40 00       	mov    $0x400800,%edi
  4009cd:	e8 1e fe ff ff       	callq  4007f0 <__cxa_atexit@plt>
  4009d2:	c9                   	leaveq 
  4009d3:	c3                   	retq   

00000000004009d4 <_GLOBAL__sub_I_main>:
  4009d4:	55                   	push   %rbp
  4009d5:	48 89 e5             	mov    %rsp,%rbp
  4009d8:	be ff ff 00 00       	mov    $0xffff,%esi
  4009dd:	bf 01 00 00 00       	mov    $0x1,%edi
  4009e2:	e8 b0 ff ff ff       	callq  400997 <_Z41__static_initialization_and_destruction_0ii>
  4009e7:	5d                   	pop    %rbp
  4009e8:	c3                   	retq   
  4009e9:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)

00000000004009f0 <__libc_csu_init>:
  4009f0:	41 57                	push   %r15
  4009f2:	41 89 ff             	mov    %edi,%r15d
  4009f5:	41 56                	push   %r14
  4009f7:	49 89 f6             	mov    %rsi,%r14
  4009fa:	41 55                	push   %r13
  4009fc:	49 89 d5             	mov    %rdx,%r13
  4009ff:	41 54                	push   %r12
  400a01:	4c 8d 25 c0 03 20 00 	lea    0x2003c0(%rip),%r12        # 600dc8 <__frame_dummy_init_array_entry>
  400a08:	55                   	push   %rbp
  400a09:	48 8d 2d c8 03 20 00 	lea    0x2003c8(%rip),%rbp        # 600dd8 <__init_array_end>
  400a10:	53                   	push   %rbx
  400a11:	4c 29 e5             	sub    %r12,%rbp
  400a14:	31 db                	xor    %ebx,%ebx
  400a16:	48 c1 fd 03          	sar    $0x3,%rbp
  400a1a:	48 83 ec 08          	sub    $0x8,%rsp
  400a1e:	e8 55 fd ff ff       	callq  400778 <_init>
  400a23:	48 85 ed             	test   %rbp,%rbp
  400a26:	74 1e                	je     400a46 <__libc_csu_init+0x56>
  400a28:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
  400a2f:	00 
  400a30:	4c 89 ea             	mov    %r13,%rdx
  400a33:	4c 89 f6             	mov    %r14,%rsi
  400a36:	44 89 ff             	mov    %r15d,%edi
  400a39:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
  400a3d:	48 83 c3 01          	add    $0x1,%rbx
  400a41:	48 39 eb             	cmp    %rbp,%rbx
  400a44:	75 ea                	jne    400a30 <__libc_csu_init+0x40>
  400a46:	48 83 c4 08          	add    $0x8,%rsp
  400a4a:	5b                   	pop    %rbx
  400a4b:	5d                   	pop    %rbp
  400a4c:	41 5c                	pop    %r12
  400a4e:	41 5d                	pop    %r13
  400a50:	41 5e                	pop    %r14
  400a52:	41 5f                	pop    %r15
  400a54:	c3                   	retq   
  400a55:	90                   	nop
  400a56:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
  400a5d:	00 00 00 

0000000000400a60 <__libc_csu_fini>:
  400a60:	f3 c3                	repz retq 

Disassembly of section .fini:

0000000000400a64 <_fini>:
  400a64:	48 83 ec 08          	sub    $0x8,%rsp
  400a68:	48 83 c4 08          	add    $0x8,%rsp
  400a6c:	c3                   	retq   
